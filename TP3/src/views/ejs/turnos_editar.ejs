<%- include('components/head') %>


<body>

    <h2>Editar Turno</h2>

    <form id="formTurno">
        <label for="selectPaciente">Paciente:</label>
        <select id="selectPaciente" name="pacienteId" required></select><br><br>

        <label for="fecha">Fecha:</label>
        <input type="date" id="fecha" name="fecha" required><br><br>

        <label for="estado">Estado:</label>
        <select id="estado" name="estado" required>
            <option value="reservado">Reservado</option>
            <option value="cancelado">Cancelado</option>
        </select><br><br>

        <button type="submit">Actualizar turno</button>
    </form>

    <div id="mensaje"></div>

    <script>
        const turnoId = '<%= id %>'; // El id que viene del backend
        const selectPaciente = document.getElementById('selectPaciente');
        const inputFecha = document.getElementById('fecha');
        const selectEstado = document.getElementById('estado');
        const form = document.getElementById('formTurno');
        const mensaje = document.getElementById('mensaje');

        async function cargarPacientes() {
            try {
                const res = await fetch('http://localhost:3001/api/v1/pacientes/');
                const pacientes = await res.json();
                pacientes.forEach(p => {
                    const option = document.createElement('option');
                    option.value = p.id;
                    option.textContent = p.name || p.email;
                    selectPaciente.appendChild(option);
                });
            } catch (err) {
                console.error('Error al cargar pacientes:', err);
            }
        }

        async function cargarTurno() {
            try {
                const res = await fetch(`http://localhost:3001/api/v1/turnos/${turnoId}`);
                const turno = await res.json();

                inputFecha.value = turno.fecha?.substring(0, 10); // "YYYY-MM-DD"
                selectEstado.value = turno.estado;
                selectPaciente.value = turno.pacienteId;
            } catch (err) {
                console.error('Error al cargar turno:', err);
                mensaje.textContent = 'Error al cargar turno';
            }
        }

        form.addEventListener('submit', async (e) => {
            e.preventDefault();

            const datos = {
                fecha: inputFecha.value,
                estado: selectEstado.value,
                pacienteId: selectPaciente.value
            };

            try {
                const res = await fetch(`http://localhost:3001/api/v1/turnos/${turnoId}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(datos)
                });

                if (res.ok) {
                    mensaje.textContent = 'Turno actualizado correctamente.';
                } else {
                    const error = await res.json();
                    mensaje.textContent = 'Error: ' + (error.mensaje || 'No se pudo actualizar');
                }
            } catch (err) {
                console.error('Error al actualizar turno:', err);
                mensaje.textContent = 'Error al conectar con el servidor';
            }
        });

        // Cargar todo al iniciar
        window.addEventListener('DOMContentLoaded', async () => {
            await cargarPacientes();
            await cargarTurno();
        });
    </script>
<%- include('components/footer') %>
